name: Stop ECS Service
on:
  workflow_dispatch:
    inputs:
      cluster-name:
        description: 'ECS Cluster Name'
        required: true
      service-name:
        description: 'ECS Service Name'
        required: true
#       ssm-parameter-name:
#         description: 'SSM Parameter Name'
#         required: true

jobs:
  stop_service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check ECS service status
        id: ecs_status
        run: |
          status=$(aws ecs describe-services --cluster ${{ github.event.inputs.cluster-name }} --services ${{ github.event.inputs.service-name }} --query 'services[0].status')
          echo "Service_Status=$status" >> $GITHUB_ENV
          echo "Service status: $status"

      - name: Get running task count
        id: task_count
        run: |
          count=$(aws ecs describe-services --cluster ${{ github.event.inputs.cluster-name }} --services ${{ github.event.inputs.service-name }} --query 'services[0].runningCount')
          echo "TASK_COUNT=$count" >> $GITHUB_ENV
          echo "Running Task Count: $count"
      
      - name: Check task count and stop pipeline if no tasks running
        if: steps.ecs_status.outputs.status == 'ACTIVE'
        run: |
          if [ "$count" -eq 0 ]; then
            echo "No tasks running stopping the pipeline"
            exit 1
          fi
          
      - name: Create parameter and store task count
        if: steps.ecs_status.ouputs.status == 'ACTIVE' 
        run: |
          aws ssm put-parameter --name ${{ github.event.inputs.cluster-name }} --value $count --type String --overwrite
          
          
          
          
          
          
          
          
          
          
          
      
      
      
      
      
      
