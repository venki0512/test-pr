name: Start Servie
on:
  workflow_dispatch:
    inputs:
      cluster-name:
        description: 'ECS Cluster Name'
        required: true
      service-name:
        description: 'ECS Service Name'
        required: true
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR      

jobs:
  stop_service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
    
      - name: Manual Approval
        id: manual_approval
        run: |
          echo "Please approve the pipeline to start the service."
          echo "::set-output name=approved::true"
          
      - name: Start service
        if: steps.manual_approval.outputs.approved == 'true'
        run: |
          count=$(aws ssm get-parameter --name /adl/nonprod/${{ github.event.inputs.service-name }} --query 'Parameter.Value' --output text)
          if [[ "$count" != "0" ]]; then
             aws ecs update-service --cluster ${{ github.event.inputs.cluster-name }} --service ${{ github.event.inputs.service-name }} --desired-count $count
             echo "Started service by setting desired count to $count."
          else
            echo "No tasks to start. Desired count is 0."
          fi
